# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/39af1c8b-9bcc-41c0-bfb0-2987444d1696";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" ];
    };

  fileSystems."/home" =
    {
      device = "/dev/disk/by-uuid/39af1c8b-9bcc-41c0-bfb0-2987444d1696";
      fsType = "btrfs";
      options = [ "subvol=home" "compress=zstd" ];
      # required for sops-nix to find the decryption key
      neededForBoot = true;
    };

  fileSystems."/nix" =
    {
      device = "/dev/disk/by-uuid/39af1c8b-9bcc-41c0-bfb0-2987444d1696";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime" ];
    };

  fileSystems."/.snapshots" =
    {
      device = "/dev/disk/by-uuid/39af1c8b-9bcc-41c0-bfb0-2987444d1696";
      fsType = "btrfs";
      options = [ "subvol=.snapshots" "compress=zstd" ];
    };

  fileSystems."/userdata" =
    {
      device = "/dev/disk/by-uuid/608C11EE8C11BF88";
      fsType = "ntfs-3g";
      options = [ "rw" ];
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/E6D2-1644";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp14s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp18s0f4u1u1u3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  # btrfs scrubbing
  services.btrfs.autoScrub.enable = true;
}
